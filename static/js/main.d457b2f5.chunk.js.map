{"version":3,"sources":["PathFindingVisualizer/Node/Node.jsx","Algorithm/pathfindingAlgorithms.js","PathFindingVisualizer/PathFindingVisualizer.jsx","SortingVisualizer/Pile/Pile.jsx","Algorithm/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","Visualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["Node","this","props","row","col","isFinish","isStart","onMouseDown","onMouseEnter","onMouseUp","isWall","extraClassName","id","className","Component","dijkstra","grid","start","finish","visitedInOrder","distance","unvisited","allNodes","length","sort","a","b","closest","shift","Infinity","isVisited","push","updateUnvisitedNeighbors","DFS","node","pop","concat","getUNeighbors","BFS","neighbors","reN","index","neighbor","previousNode","AStar","heuristic","cur","updateUnvisitedNeighborsStar","manhattanDistance","ar","ac","br","bc","Math","abs","re","randomSelect","path","min","max","floor","random","getNeighbors","visited","points","height","width","pRe","validate","slice","connected","unconnected","forEach","nr","nc","ir","ic","c","u","connect","makeWall","isW","newNode","PathFindingVisualizer","state","FR","FC","mouseIsPressed","changingStart","changingFinish","visualized","rendering","numRow","numCol","SR","SC","speed","delays","currentAlgorithm","algorithms","pathfindingAlgorithms","visualizePathfinding","bind","clearVisualizer","setAlgorithm","getFunctions","algoId","setState","initializeGrid","clearWall","currentRow","element","document","getElementById","createNode","updateGridWithWall","clearVisitedAndPath","newFinish","newStart","setVisualizerRendering","g","shortedPath","unshift","getShortestPath","i","setTimeout","n","console","log","map","rowId","key","nodeId","handleMouseDown","handleMouseEnter","handleMouseUp","class","style","marginTop","type","disabled","data-toggle","aria-haspopup","aria-expanded","marginRight","aria-labelledby","onClick","setSpeed","j","splice","rn","primMaze","marginLeft","Pile","val","isChanging","finished","isPivot","size","colorSetIndex","changingColors","offSet","normalColors","color","lineOff","indicatorLength","background","position","display","x1","y1","x2","y2","stroke","strokeWidth","swap","piles","tempVal","selectionSort","statesInOrder","minId","temp","changing","bubbleSort","newN","insertionSort","mergeSort","mergeSortHelper","end","mid","k","pilesC","merge","quickSort","quickSortHelper","pivot","partition","SortingVisualizer","numPiles","maxPile","changingPiles","pileDelayTimes","DelayTimesSizeBased","getRandomInt","descriptions","unsortedPiles","sortingAlgorithms","randomizePiles","visualizeSorting","initializePiles","s","sizes","nSquare","nLogn","pile","pileId","dummy","indexOf","setSize","range","Visualizer","mode","goFunction","resetFunction","sortingClicked","pathClicked","AIClicked","aicount","changeRenderingState","go","reset","setAlgo","renderObj","interval","springConfig","stiffness","adjustingSpeed","href","data-target","invisibleOrNot","algorithm","src","opacity","alt","role","data-dismiss","App","charset","name","content","rel","integrity","crossorigin","basename","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d457b2f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Node.css';\r\n\r\nexport default class Node extends Component {\r\n    render() {\r\n        const {\r\n            row,\r\n            col,\r\n            isFinish,\r\n            isStart,\r\n            onMouseDown,\r\n            onMouseEnter,\r\n            onMouseUp,\r\n            isWall,\r\n        } = this.props;\r\n        const extraClassName = isFinish\r\n            ? 'node-finish'\r\n            : isStart\r\n                ? 'node-start'\r\n                : isWall\r\n                    ? 'node-wall'\r\n                    : '';\r\n        return (\r\n            <div\r\n                id={`node-${row}-${col}`}\r\n                className={`node ${extraClassName}`}\r\n                onMouseDown={() => onMouseDown(row, col)}\r\n                onMouseEnter={() => onMouseEnter(row, col)}\r\n                onMouseUp={() => onMouseUp()}>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nfunction dijkstra(grid, start, finish) {\r\n    const visitedInOrder = [];\r\n    start.distance = 0;\r\n    const unvisited = allNodes(grid);\r\n    while (unvisited.length) {\r\n        sortNodes(unvisited);\r\n        const closest = unvisited.shift();\r\n        if (closest === finish) {\r\n            return visitedInOrder;\r\n        }\r\n        if (closest.isWall) continue;\r\n        if (closest.distance === Infinity) return visitedInOrder;\r\n        closest.isVisited = true;\r\n        visitedInOrder.push(closest);\r\n\r\n        updateUnvisitedNeighbors(closest, grid);\r\n    }\r\n    return visitedInOrder;\r\n}\r\n\r\nfunction DFS(grid, start, finish) {\r\n    const visitedInOrder = [];\r\n    let unvisited = [];\r\n    unvisited.push(start);\r\n    while (unvisited.length) {\r\n        const node = unvisited.pop();\r\n        if (node === finish) {\r\n            return visitedInOrder;\r\n        }\r\n        if (node.isWall) continue;\r\n        node.isVisited = true;\r\n        visitedInOrder.push(node);\r\n\r\n        unvisited = unvisited.concat(getUNeighbors(node, grid));\r\n    }\r\n\r\n    return visitedInOrder;\r\n}\r\n\r\nfunction BFS(grid, start, finish) {\r\n    const visitedInOrder = [];\r\n    let unvisited = [];\r\n    unvisited.push(start);\r\n    while (unvisited.length) {\r\n        const node = unvisited.shift();\r\n        if (node === finish) {\r\n            return visitedInOrder;\r\n        }\r\n        if (node.isWall) continue;\r\n        node.isVisited = true;\r\n        visitedInOrder.push(node);\r\n\r\n        unvisited = unvisited.concat(getUNeighbors(node, grid));\r\n    }\r\n\r\n    return visitedInOrder;\r\n}\r\n\r\nfunction getUNeighbors(node, grid) {\r\n    const neighbors = [];\r\n    const reN = [];\r\n    const { row, col } = node;\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n\r\n    for (let index = 0; index < neighbors.length; index++) {\r\n        const neighbor = neighbors[index];\r\n        if (!neighbor.isVisited) {\r\n            neighbor.previousNode = node;\r\n            neighbor.isVisited = true;\r\n            reN.push(neighbor);\r\n        }\r\n    }\r\n    return reN;\r\n\r\n}\r\n\r\nfunction AStar(grid, start, finish) {\r\n    const visitedInOrder = [];\r\n    start.distance = 0;\r\n    start.heuristic = 0;\r\n    const unvisited = allNodes(grid);\r\n    while (unvisited.length) {\r\n        sortNodesStar(unvisited);\r\n        const cur = unvisited.shift();\r\n        if (cur === finish) {\r\n            return visitedInOrder;\r\n        }\r\n        if (cur.isWall) continue;\r\n        if (cur.distance + cur.heuristic === Infinity) return visitedInOrder;\r\n        cur.isVisited = true;\r\n        visitedInOrder.push(cur);\r\n\r\n        updateUnvisitedNeighborsStar(cur, grid, finish);\r\n    }\r\n    return visitedInOrder;\r\n}\r\n\r\nfunction updateUnvisitedNeighborsStar(cur, grid, finish) {\r\n    const neighbors = [];\r\n    const { row, col } = cur;\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    for (const neighbor of neighbors) {\r\n        if (!neighbor.isVisited) {\r\n            neighbor.distance = cur.distance + 1;\r\n            neighbor.heuristic = manhattanDistance(neighbor, finish);\r\n            neighbor.previousNode = cur;\r\n        }\r\n    }\r\n}\r\n\r\nfunction manhattanDistance(a, b) {\r\n    let { row: ar, col: ac } = a;\r\n    let { row: br, col: bc } = b;\r\n    return Math.abs(ar - br) + Math.abs(ac - bc);\r\n}\r\n\r\nfunction allNodes(grid) {\r\n    const re = [];\r\n    for (const row of grid) {\r\n        for (const node of row) {\r\n            re.push(node);\r\n        }\r\n    }\r\n    return re;\r\n}\r\n\r\nfunction sortNodesStar(nodes) {\r\n    nodes.sort((a, b) => (a.distance + a.heuristic) - (b.distance + b.heuristic));\r\n}\r\n\r\n\r\nfunction sortNodes(nodes) {\r\n    nodes.sort((a, b) => a.distance - b.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(closest, grid) {\r\n    const neighbors = [];\r\n    const { row, col } = closest;\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    for (const neighbor of neighbors) {\r\n        if (!neighbor.isVisited) {\r\n            neighbor.distance = closest.distance + 1;\r\n            neighbor.previousNode = closest;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getShortestPath(finish) {\r\n    const path = [];\r\n    let cur = finish;\r\n    while (cur !== null) {\r\n        path.unshift(cur);\r\n        cur = cur.previousNode;\r\n    }\r\n    return path;\r\n}\r\n\r\nfunction randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction primMaze(grid) {\r\n    let sr = 7, sc = 17; // set a starting point for generating maze\r\n    let height = grid.length, width = grid[0].length;\r\n    for (let i = 0; i < height; i++) {\r\n        for (let j = 0; j < width; j++) {\r\n            makeWall(grid, i, j, false);\r\n        }\r\n\r\n    }\r\n    for (let i = 0; i < height; i++) {\r\n        for (let j = i % 2 + 1; j < width; j += i % 2 + 1) {\r\n            makeWall(grid, i, j, true);\r\n        }\r\n    }\r\n    for (let i = 0; i < height; i++) {\r\n        makeWall(grid, i, 0, true);\r\n    }\r\n    let visited = [];\r\n    let path = [{ row: sr, col: sc }];\r\n    while (path.length > 0) {\r\n        const index = randomSelect(path);\r\n        const node = path[index];\r\n        path.splice(index, 1);\r\n        visited = visited.concat([node]);\r\n        const { c: connected, u: unconnected } = getNeighbors(grid, visited, node);\r\n        if (connected.length > 0) {\r\n            let rn = randomSelect(connected);\r\n            connect(grid, node, connected[rn]);\r\n            connected.splice(rn);\r\n        }\r\n        path = path.concat(unconnected);\r\n\r\n    }\r\n}\r\n\r\nfunction randomSelect(path) {\r\n    return randomInt(0, path.length - 1);\r\n}\r\n\r\nfunction validate(grid, points) {\r\n    let height = grid.length, width = grid[0].length;\r\n    let pRe = [];\r\n    for (let index = 0; index < points.length; index++) {\r\n        let { row, col } = points[index];\r\n        if ((0 <= row && row < height && 0 <= col && col < width)) {\r\n            pRe.push(points[index]);\r\n        }\r\n    }\r\n    return pRe;\r\n\r\n}\r\n\r\nfunction isVisited(visited, node) {\r\n    let { row: nr, col: nc } = node;\r\n    for (let index = 0; index < visited.length; index++) {\r\n        let { row: ir, col: ic } = visited[index];\r\n        if (nr === ir && nc === ic) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getNeighbors(grid, visited, node) {\r\n    let { row, col } = node;\r\n    let neighbors = [{ row: row + 2, col: col }, { row: row - 2, col: col }, { row: row, col: col + 2 }, { row: row, col: col - 2 }];\r\n    neighbors = validate(grid, neighbors.slice());\r\n    let connected = [];\r\n    let unconnected = [];\r\n    neighbors.forEach(neighbor => {\r\n        if (isVisited(visited, neighbor)) {\r\n            connected.push(neighbor);\r\n        }\r\n        else {\r\n            unconnected.push(neighbor);\r\n        }\r\n    });\r\n    return { c: connected, u: unconnected };\r\n}\r\n\r\nfunction connect(grid, a, b) {\r\n    let { row: ar, col: ac } = a;\r\n    let { row: br, col: bc } = b;\r\n    let row = (ar + br) / 2;\r\n    let col = (ac + bc) / 2;\r\n    makeWall(grid, row, col, false);\r\n}\r\n\r\nfunction makeWall(grid, row, col, isW) {\r\n    const node = grid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        isWall: isW,\r\n    }\r\n    grid[row][col] = newNode;\r\n}\r\n\r\nexport { dijkstra, BFS, DFS, AStar, getShortestPath, primMaze };","import React, { Component } from 'react';\r\nimport Node from './Node/Node';\r\nimport { dijkstra, BFS, DFS, AStar, getShortestPath, primMaze } from '../Algorithm/pathfindingAlgorithms';\r\nimport './PathFindingVisualizer.css';\r\n\r\nexport default class PathFindingVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            grid: [],\r\n            FR: 7,\r\n            FC: 31,\r\n            mouseIsPressed: false,\r\n            changingStart: false,\r\n            changingFinish: false,\r\n            visualized: false,\r\n            rendering: false,\r\n            numRow: 17,\r\n            numCol: 37,\r\n            SR: 7,\r\n            SC: 5,\r\n            speed: 'median',\r\n            delays: {'slow': 17, 'median': 7, 'fast': 3},\r\n            currentAlgorithm: -1,\r\n            algorithms: ['BFS', 'Dijkstra', 'A Star', 'DFS'],\r\n            pathfindingAlgorithms: [BFS, dijkstra, AStar, DFS]\r\n        };\r\n        this.visualizePathfinding = this.visualizePathfinding.bind(this);\r\n        this.clearVisualizer = this.clearVisualizer.bind(this);\r\n        this.setAlgorithm = this.setAlgorithm.bind(this);\r\n        this.props.getFunctions(this.visualizePathfinding, this.clearVisualizer, this.setAlgorithm, this.state.algorithms);\r\n    }\r\n\r\n    setAlgorithm(algoId) {\r\n        this.setState({ currentAlgorithm: algoId });\r\n    }\r\n\r\n    isRendering() {\r\n        return this.state.rendering;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const grid = this.initializeGrid(false);\r\n        this.setState({\r\n            grid: grid,\r\n            currentAlgorithm: -1\r\n        })\r\n        this.state.grid = grid;\r\n    }\r\n\r\n    initializeGrid(clearWall) {\r\n        const grid = [];\r\n        for (let row = 0; row < this.state.numRow; row++) {\r\n            const currentRow = [];\r\n            for (let col = 0; col < this.state.numCol; col++) {\r\n                let isW = false;\r\n                const element = document.getElementById(`node-${row}-${col}`);\r\n                if (element && (element.className === 'node node-path' || element.className === 'node node-visited')) {\r\n                    element.className = 'node';\r\n                }\r\n                if (!clearWall && element && element.className === 'node node-wall') {\r\n                    isW = true;\r\n                }\r\n                currentRow.push(this.createNode(row, col, isW));\r\n            }\r\n            grid.push(currentRow);\r\n        }\r\n        return grid;\r\n    }\r\n\r\n    createNode(row, col, isW) {\r\n        return {\r\n            col,\r\n            row,\r\n            isStart: row === this.state.SR && col === this.state.SC,\r\n            isFinish: row === this.state.FR && col === this.state.FC,\r\n            distance: Infinity,\r\n            heuristic: Infinity,\r\n            isVisited: false,\r\n            isWall: isW,\r\n            previousNode: null,\r\n        };\r\n    }\r\n\r\n    handleMouseDown(row, col) {\r\n        if (row === this.state.SR && col === this.state.SC) {\r\n            this.setState({ changingStart: true });\r\n        }\r\n        else if (row === this.state.FR && col === this.state.FC) {\r\n            this.setState({ changingFinish: true });\r\n        }\r\n        else if (!this.state.rendering) {\r\n            this.updateGridWithWall(this.state.grid, row, col);\r\n            this.setState({ mouseIsPressed: true });\r\n            this.clearVisitedAndPath();\r\n        }\r\n    }\r\n\r\n    handleMouseEnter(row, col) {\r\n        if (this.state.mouseIsPressed) {\r\n            this.updateGridWithWall(this.state.grid, row, col);\r\n            this.setState({ mouseIsPressed: true });\r\n        }\r\n\r\n        else if (this.state.changingStart && !(row === this.state.FR && col === this.state.FC)) {\r\n            const start = document.getElementById(`node-${this.state.SR}-${this.state.SC}`);\r\n            if (start) {\r\n                start.className = 'node';\r\n                start.isStart = false;\r\n                this.state.grid[this.state.SR][this.state.SC].isStart = false;\r\n            }\r\n            const newStart = document.getElementById(`node-${row}-${col}`);\r\n            if (newStart) {\r\n                newStart.isStart = true;\r\n                newStart.className = 'node node-start';\r\n                this.state.grid[row][col].isStart = true;\r\n            }\r\n            this.setState({ SR: row, SC: col });\r\n            this.clearVisitedAndPath();\r\n\r\n        }\r\n        else if (this.state.changingFinish && !(row === this.state.SR && col === this.state.SC)) {\r\n            const finish = document.getElementById(`node-${this.state.FR}-${this.state.FC}`);\r\n            if (finish) {\r\n                finish.className = 'node';\r\n                finish.isFinish = false;\r\n                this.state.grid[this.state.FR][this.state.FC].isFinish = false;\r\n            }\r\n            const newFinish = document.getElementById(`node-${row}-${col}`);\r\n            if (newFinish) {\r\n                newFinish.isFinish = true;\r\n                newFinish.className = 'node node-finish';\r\n                this.state.grid[row][col].isFinish = true;\r\n            }\r\n            this.setState({ FR: row, FC: col });\r\n            this.clearVisitedAndPath();\r\n        }\r\n\r\n    }\r\n\r\n    handleMouseUp() {\r\n        this.setState({\r\n            changingStart: false,\r\n            changingFinish: false,\r\n            mouseIsPressed: false\r\n        });\r\n    }\r\n\r\n    updateGridWithWall(grid, row, col) {\r\n        const node = grid[row][col];\r\n        const newNode = {\r\n            ...node,\r\n            isWall: !node.isWall\r\n        }\r\n        grid[row][col] = newNode;\r\n    }\r\n\r\n    visualizePathfinding() {\r\n        if (this.state.currentAlgorithm === -1) return;\r\n        if (this.state.rendering) return;\r\n\r\n        this.setState({ visualized: true, rendering: true });\r\n        this.props.setVisualizerRendering(true);\r\n        let g = this.initializeGrid(false);\r\n        this.setState({\r\n            grid: g\r\n        });\r\n        this.state.grid = g;\r\n        const grid = this.state.grid;\r\n        const start = grid[this.state.SR][this.state.SC];\r\n        const finish = grid[this.state.FR][this.state.FC];\r\n        const visitedInOrder = this.state.pathfindingAlgorithms[this.state.currentAlgorithm](grid, start, finish);\r\n        const shortedPath = getShortestPath(finish);\r\n        for (let i = 0; i < visitedInOrder.length; i++) {\r\n            setTimeout(() => {\r\n                const node = visitedInOrder[i];\r\n                if (!node.isStart && !node.isFinish)\r\n                    document.getElementById(`node-${node.row}-${node.col}`).className = 'node node-visited';\r\n            }, this.state.delays[this.state.speed] * i);\r\n        }\r\n\r\n        for (let i = 0; i < shortedPath.length; i++) {\r\n            setTimeout(() => {\r\n                const node = shortedPath[i];\r\n                if (!node.isStart && !node.isFinish)\r\n                    document.getElementById(`node-${node.row}-${node.col}`).className = 'node node-path';\r\n            }, this.state.delays[this.state.speed] * visitedInOrder.length + 50 * i);\r\n\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({ rendering: false });\r\n            this.props.setVisualizerRendering(false);\r\n        }, this.state.delays[this.state.speed] * visitedInOrder.length + 50 * shortedPath.length);\r\n\r\n    }\r\n\r\n    clearVisualizer() {\r\n        if (!this.state.rendering)\r\n            this.setState({ grid: this.initializeGrid(true), visualized: false });\r\n\r\n    }\r\n\r\n    clearVisitedAndPath(){\r\n        for(let row = 0; row < this.state.numRow; row++){\r\n            for(let col = 0; col < this.state.numCol; col++){\r\n                let n = document.getElementById(`node-${row}-${col}`);\r\n                console.log(n);\r\n                if(n && (n.className === 'node node-visited' || n.className === 'node node-path')){\r\n                    n.className = 'node';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setSpeed(speed){\r\n        this.setState({speed: speed});\r\n    }\r\n\r\n    render() {\r\n\r\n        const grid = this.state.grid;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"grid\">\r\n                    {grid.map((row, rowId) => {\r\n                        return (\r\n                            <div key={rowId}>\r\n                                {row.map((node, nodeId) => {\r\n                                    const { row, col, isFinish, isStart, isWall } = node;\r\n                                    return (\r\n                                        <Node\r\n                                            key={nodeId}\r\n                                            row={row}\r\n                                            col={col}\r\n                                            isStart={isStart}\r\n                                            isFinish={isFinish}\r\n                                            isWall={isWall}\r\n                                            mouseIsPressed={this.state.mouseIsPressed}\r\n                                            onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                                            onMouseEnter={(row, col) => this.handleMouseEnter(row, col)}\r\n                                            onMouseUp={() => this.handleMouseUp()}\r\n                                        ></Node>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n                <div class={\"dropdown\"} style={{marginTop: \"10px\"}}>\r\n                        <button class=\"btn btn-outline-dark dropdown-toggle\" type=\"button\" disabled={this.state.rendering} id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{marginRight:\"5px\", height: \"30px\", width: \"150px\" }}>\r\n                            <p style={{ \"margin-top\": \"-5px\" }}>{`Speed: ${this.state.speed}`}</p>\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                            <li>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{height: \"30px\"}} onClick={() => this.setSpeed('slow')}><p style={{ \"margin-top\": \"-5px\" }}>{`slow`}</p></button>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{height: \"30px\"}} onClick={() => this.setSpeed('median')}><p style={{ \"margin-top\": \"-5px\" }}>{`median`}</p></button>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{height: \"30px\"}} onClick={() => this.setSpeed('fast')}><p style={{ \"margin-top\": \"-5px\" }}>{`fast`}</p></button>\r\n                            </li>\r\n                        </div>\r\n                        <button\r\n                        onClick={() => { \r\n                            primMaze(this.state.grid);\r\n                            this.setState({ finish: false});\r\n                            this.clearVisitedAndPath();\r\n                        }}\r\n                        type=\"button\" class=\"btn btn-outline-dark\"\r\n                        style={{marginLeft: \"5px\", \"height\": \"30px\"}}\r\n                        disabled={this.state.rendering}>\r\n                        <p style={{ \"margin-top\": \"-6px\" }}>generate maze</p>\r\n                        \r\n                    </button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Pile.css';\r\n\r\nexport default class Pile extends Component {\r\n    render() {\r\n\r\n        const {\r\n            val,\r\n            isChanging,\r\n            isPivot,\r\n            finished,\r\n            index,\r\n            size,\r\n            colorSetIndex,\r\n            changingColors = [`rgb(228, 230, 120)`, `rgb(155, 147, 229)`, `rgb(248, 250, 140)`],\r\n            offSet = { 'small': 20, 'median': 0, 'large': 0 },\r\n            normalColors = [`rgb(200,${(1 - val / 45) * 255 + 50 + offSet[size]}, 255)`, `rgb(250,200, ${(1 - val / 80) * 255 + offSet[size]})`, `rgb( ${(1 - val / 80) * 255 + offSet[size]},200,250)`],\r\n        } = this.props;\r\n\r\n        let extraClassName = '';\r\n        if (isChanging) {\r\n            extraClassName = '-changing';\r\n        }\r\n        if (finished) {\r\n            extraClassName = '-finished';\r\n        }\r\n        let color = extraClassName === '-changing' ? changingColors[colorSetIndex] : normalColors[colorSetIndex];\r\n        if (!this.props.finished && this.props.isPivot) color = 'rgb(240, 190, 149)';\r\n        let lineOff = -20 * this.props.index;\r\n        let heights = { 'small': 14, 'median': 10, 'large': 8 };\r\n        let indicatorLength = { 'small': 420, 'median': 620, 'large': 820 };\r\n        return (\r\n            <>\r\n                <div\r\n                    className={'pile' + extraClassName}\r\n                    style={{ height: `${val * heights[this.props.size]}px`, background: color }}\r\n\r\n                >\r\n                    <p className='value'>{val}</p>\r\n                    {!this.props.finished && this.props.isPivot && <svg height=\"100\" width={indicatorLength[size] + 100} style={{ position: \"absolute\", display: \"flex\", marginTop: \"-31px\", marginLeft: `${lineOff}px` }}>\r\n                        <line x1=\"0\" y1=\"0\" x2={indicatorLength[size]} y2=\"0\" style={{ stroke: \"grey\", strokeWidth: \"3px\" }}></line>\r\n                    </svg>}\r\n                </div>\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n}","function swap(piles, a, b) {\r\n    const tempVal = piles[a];\r\n    piles[a] = piles[b];\r\n    piles[b] = tempVal;\r\n}\r\n\r\nfunction selectionSort(piles) {\r\n\r\n    let statesInOrder = [];\r\n    for (let i = 0; i < piles.length - 1; i++) {\r\n        let minId = i;\r\n        for (let j = i + 1; j < piles.length; j++) {\r\n            if (piles[j] < piles[minId]) {\r\n                minId = j;\r\n            }\r\n            const temp = { piles: piles.slice(), changing: [j] };\r\n            statesInOrder.push(temp);\r\n\r\n        }\r\n        swap(piles, minId, i);\r\n        const temp = { piles: piles.slice(), changing: [minId, i] };\r\n        statesInOrder.push(temp);\r\n    }\r\n    return statesInOrder;\r\n}\r\n\r\nfunction bubbleSort(piles) {\r\n    let statesInOrder = [];\r\n    let n = piles.length;\r\n    while (n > 1) {\r\n        let newN = 0;\r\n        for (let i = 1; i < n; i++) {\r\n            if (piles[i - 1] > piles[i]) {\r\n                swap(piles, i - 1, i);\r\n                newN = i;\r\n                const temp = { piles: piles.slice(), changing: [i] };\r\n                statesInOrder.push(temp);\r\n            }\r\n        }\r\n        n = newN;\r\n    }\r\n    return statesInOrder;\r\n}\r\n\r\nfunction insertionSort(piles) {\r\n    let statesInOrder = [];\r\n    for (let i = 1; i < piles.length; i++) {\r\n        for (let j = i; j > 0 && piles[j - 1] > piles[j]; j--) {\r\n            swap(piles, j, j - 1);\r\n            const temp = { piles: piles.slice(), changing: [j - 1] };\r\n            statesInOrder.push(temp);\r\n        }\r\n    }\r\n    console.log(statesInOrder);\r\n    return statesInOrder;\r\n}\r\n\r\nfunction mergeSort(piles) {\r\n    let statesInOrder = [];\r\n    mergeSortHelper(piles, 0, piles.length - 1, statesInOrder);\r\n    return statesInOrder;\r\n}\r\n\r\nfunction mergeSortHelper(piles, start, end, statesInOrder) {\r\n    if (start === end) return;\r\n    const mid = Math.floor((start + end) / 2);\r\n    mergeSortHelper(piles, start, mid, statesInOrder);\r\n    mergeSortHelper(piles, mid + 1, end, statesInOrder);\r\n    merge(piles, start, mid, end, statesInOrder);\r\n}\r\n\r\nfunction merge(piles, start, mid, end, statesInOrder) {\r\n    let k = start, i = start, j = mid + 1;\r\n    let pilesC = piles.slice();\r\n    while (i <= mid && j <= end) {\r\n        if (pilesC[i] <= pilesC[j]) {\r\n            piles[k++] = pilesC[i++];\r\n        }\r\n        else {\r\n            piles[k++] = pilesC[j++];\r\n        }\r\n        const temp = { piles: piles.slice(), changing: [i, j, k] };\r\n        statesInOrder.push(temp);\r\n\r\n    }\r\n    while (i <= mid) {\r\n        piles[k++] = pilesC[i++];\r\n        const temp = { piles: piles.slice(), changing: [i, k] };\r\n        statesInOrder.push(temp);\r\n    }\r\n    while (j <= end) {\r\n        piles[k++] = pilesC[j++];\r\n        const temp = { piles: piles.slice(), changing: [j, k] };\r\n        statesInOrder.push(temp);\r\n    }\r\n}\r\n\r\n\r\nfunction quickSort(piles) {\r\n    let statesInOrder = [];\r\n    quickSortHelper(piles, 0, piles.length - 1, statesInOrder);\r\n    return statesInOrder;\r\n}\r\n\r\nfunction quickSortHelper(piles, start, end, statesInOrder) {\r\n    if (start < end) {\r\n        let pivot = partition(piles, start, end, statesInOrder);\r\n        quickSortHelper(piles, start, pivot - 1, statesInOrder);\r\n        quickSortHelper(piles, pivot + 1, end, statesInOrder);\r\n    }\r\n}\r\n\r\nfunction partition(piles, start, end, statesInOrder) {\r\n    let pivot = piles[end];\r\n    let i = start - 1;\r\n    for (let j = start; j <= end - 1; j++) {\r\n        if (piles[j] < pivot) {\r\n            i++;\r\n            swap(piles, i, j);\r\n            const temp = { piles: piles.slice(), changing: [i, j], pivot: pivot};\r\n            if(pivot !== piles.length+4) statesInOrder.push(temp);\r\n        }\r\n    }\r\n    swap(piles, i + 1, end);\r\n    const temp = { piles: piles.slice(), changing: [i + 1, end], pivot: pivot};\r\n    if(pivot !== piles.length+4) statesInOrder.push(temp);\r\n    return i + 1;\r\n}\r\n\r\nexport { selectionSort, bubbleSort, insertionSort, mergeSort, quickSort };","import React, { Component } from 'react';\r\nimport './SortingVisualizer.css';\r\nimport Pile from './Pile/Pile';\r\nimport { selectionSort, bubbleSort, insertionSort, mergeSort, quickSort } from '../Algorithm/sortingAlgorithms';\r\n\r\nexport default class SortingVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            piles: [],\r\n            numPiles: 30,\r\n            finished: false,\r\n            maxPile: 80,\r\n            changingPiles: [],\r\n            pileDelayTimes: [30, 40, 40, 80, 80],\r\n            DelayTimesSizeBased: {'fast': [15, 20, 20, 40, 40], 'median': [30, 40, 40, 80, 80], 'slow': [60, 80, 80, 160, 160]},\r\n            colorSetIndex: getRandomInt(0, 3),\r\n            currentAlgorithm: -1,\r\n            descriptions: ['Selection Sort: repeatedly find the minimum element from the unsorted part and append it to the sorted part.', \r\n                           'Bubble Sort: repeatedly swap the adjacent elements if they are in wrong order.',\r\n                           'Insertion Sort: repeatedly place value from the unsorted part at the correct position in the sorted part(by finding the closest left-side element that is smaller than it).',\r\n                           'Merge Sort: divide the array into two halves, sort them recursively using merge sort, and then merge the two halves.',\r\n                           'Quick Sort: choose an element as pivot, arrange the array such that the elements smaller than pivot are on its left and others are on its right, sort the two halves recursively.'],\r\n            unsortedPiles: [],\r\n            speed: \"median\",\r\n            size: \"median\",\r\n            algorithms: ['Selection Sort', 'Bubble Sort', 'Insertion Sort', 'Merge Sort', 'Quick Sort'],\r\n            sortingAlgorithms: [selectionSort, bubbleSort, insertionSort, mergeSort, quickSort]\r\n        };\r\n        this.randomizePiles = this.randomizePiles.bind(this);\r\n        this.visualizeSorting = this.visualizeSorting.bind(this);\r\n        this.setAlgorithm = this.setAlgorithm.bind(this);\r\n        this.props.getFunctions(this.visualizeSorting, this.randomizePiles, this.setAlgorithm, this.state.algorithms);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const piles = this.initializePiles();\r\n        this.setState({\r\n            piles: piles,\r\n        });\r\n        this.setState({ piles: piles, unsortedPiles: piles.slice() });\r\n    }\r\n\r\n    setAlgorithm(algoId) {\r\n        if (this.state.unsortedPiles !== []) {\r\n            this.setState({ finished: false, changingPiles: [], piles: this.state.unsortedPiles, pivot: -1 });\r\n        }\r\n        this.setState({ currentAlgorithm: algoId });\r\n    }\r\n\r\n    initializePiles() {\r\n        let piles = [];\r\n        for (let i = 0; i < this.state.numPiles; i++) {\r\n            piles.push(i + 5);\r\n        }\r\n\r\n        for (let i = 0; i < this.state.numPiles; i++) {\r\n            let j = getRandomInt(0, i);\r\n            let temp = piles[i];\r\n            piles[i] = piles[j];\r\n            piles[j] = temp;\r\n        }\r\n        piles.push(this.state.numPiles + 5);\r\n        return piles;\r\n    }\r\n\r\n    visualizeSorting() {\r\n        if (this.state.currentAlgorithm === -1) {\r\n            return;\r\n        }\r\n        if (this.state.rendering) return;\r\n        if (this.state.finished) {\r\n            this.state.finished = false;\r\n            this.state.changingPiles = [];\r\n            this.state.piles = this.state.unsortedPiles;\r\n        }\r\n        this.setState({ rendering: true });\r\n        this.props.setVisualizerRendering(true);\r\n        const piles = this.state.piles.slice();\r\n\r\n        const statesInOrder = this.state.sortingAlgorithms[this.state.currentAlgorithm](piles);\r\n        for (let i = 0; i < statesInOrder.length; i++) {\r\n            const { piles: state, changing: changingPiles, pivot } = statesInOrder[i];\r\n            setTimeout(() => {\r\n                this.setState({ piles: state, changingPiles: changingPiles, pivot: pivot });\r\n            }, this.state.pileDelayTimes[this.state.currentAlgorithm] * i);\r\n\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({ rendering: false, finished: true });\r\n            this.props.setVisualizerRendering(false);\r\n        }, this.state.pileDelayTimes[this.state.currentAlgorithm] * statesInOrder.length);\r\n    }\r\n\r\n    randomizePiles() {\r\n        if (this.state.rendering) return;\r\n        this.setState({ finished: false, changingPiles: [], colorSetIndex: getRandomInt(0, 3) });\r\n        const piles = this.initializePiles();\r\n        this.setState({ piles: piles, unsortedPiles: piles.slice() });\r\n    }\r\n\r\n    setSpeed(speed) {\r\n        this.setState({ speed: speed, pileDelayTimes: this.state.DelayTimesSizeBased[speed] });\r\n    }\r\n\r\n    setSize(s) {\r\n        if(this.state.size === s) return;\r\n        let sizes = {\"small\": 20, \"median\": 30, \"large\": 40};\r\n        this.setState({ size: s, numPiles: sizes[s] });\r\n        this.state.numPiles = sizes[s];\r\n        const piles = this.initializePiles();\r\n        this.setState({ finished: false, changingPiles: [], piles: piles, unsortedPiles: piles.slice() });\r\n    }\r\n\r\n    render() {\r\n        const piles = this.state.piles;\r\n        let nSquare = <p>Time Complexity: θ(n&#178;)</p>\r\n        let nLogn = <p>Time Complexity: θ(n·log(n))</p>\r\n        return (\r\n            <>\r\n\r\n                <div className='piles' class=\"container\">\r\n                    {\r\n\r\n                        piles.map((pile, pileId) => {\r\n                            return (\r\n                                <Pile\r\n                                    dummy={pileId === this.state.numPiles}\r\n                                    finished={this.state.finished}\r\n                                    className='pile'\r\n                                    key={pileId}\r\n                                    index={pileId}\r\n                                    val={pile}\r\n                                    size={this.state.size}\r\n                                    isChanging={this.state.changingPiles.indexOf(pileId) !== -1}\r\n                                    isPivot={this.state.pivot === pile}\r\n                                    colorSetIndex={this.state.colorSetIndex}\r\n                                ></Pile>\r\n                            )\r\n                        })\r\n\r\n                    }\r\n\r\n                </div>\r\n                \r\n                <div class=\"d-flex\" style={{marginLeft: \"37%\", marginTop: \"10px\"}}>\r\n                    <div class=\"dropdown 1\">\r\n                        <button class=\"btn btn-outline-dark dropdown-toggle\" type=\"button\" disabled={this.state.rendering} id=\"dropdownMenuSpeed\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{ marginRight: \"5px\", height: \"30px\", width: \"150px\" }}>\r\n                            <p style={{ \"margin-top\": \"-5px\" }}>{`Speed: ${this.state.speed}`}</p>\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuSpeed\">\r\n                            <li>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{ height: \"30px\" }} onClick={() => this.setSpeed('slow')}><p style={{ \"margin-top\": \"-5px\" }}>{`slow`}</p></button>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{ height: \"30px\" }} onClick={() => this.setSpeed('median')}><p style={{ \"margin-top\": \"-5px\" }}>{`median`}</p></button>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{ height: \"30px\" }} onClick={() => this.setSpeed('fast')}><p style={{ \"margin-top\": \"-5px\" }}>{`fast`}</p></button>\r\n                            </li>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dropdown 1\">\r\n                        <button class=\"btn btn-outline-dark dropdown-toggle\" type=\"button\" disabled={this.state.rendering} id=\"dropdownMenuSize\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{ marginLeft: \"5px\", height: \"30px\", width: \"150px\" }}>\r\n                            <p style={{ \"margin-top\": \"-5px\" }}>{`Size: ${this.state.size}`}</p>\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuSize\">\r\n                            <li>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{ height: \"30px\" }} onClick={() => this.setSize('small')}><p style={{ \"margin-top\": \"-5px\" }}>{`small`}</p></button>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{ height: \"30px\" }} onClick={() => this.setSize('median')}><p style={{ \"margin-top\": \"-5px\" }}>{`median`}</p></button>\r\n                                <button type=\"button\" class=\"btn btn-light navbtn\" style={{ height: \"30px\" }} onClick={() => this.setSize('large')}><p style={{ \"margin-top\": \"-5px\" }}>{`large`}</p></button>\r\n                            </li>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <h6 class='algoDescription'>{this.state.currentAlgorithm === -1 ? \"Welcome to Sorting. Select an algorithm first.\" : this.state.descriptions[this.state.currentAlgorithm]}</h6>\r\n                <h5 class='algoComplexity' style={{marginTop: \"-4.5%\", color:\"rgb(90,90,90)\"}}>{\r\n                    this.state.currentAlgorithm === -1 ? \r\n                        \"\" : this.state.currentAlgorithm < 3 ?\r\n                            nSquare : nLogn\r\n                }</h5>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction getRandomInt(min, range) {\r\n    return Math.floor(Math.random() * range) + min;\r\n}","import React, { Component } from \"react\";\r\nimport TextLoop from \"react-text-loop\";\r\nimport PathFindingVisualizer from \"./PathFindingVisualizer/PathFindingVisualizer\";\r\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\r\nimport \"./Visualizer.css\";\r\n// import AIVisualizer from \"./AIVisualizer/AIVisualizer\";\r\n\r\nexport default class Visualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: \"main\",\r\n      rendering: false,\r\n      algorithms: [],\r\n      currentAlgorithm: null,\r\n      goFunction: () => {},\r\n      resetFunction: () => {},\r\n      setAlgorithm: () => {},\r\n      sortingClicked: false,\r\n      pathClicked: false,\r\n      AIClicked: false,\r\n      aicount: 0,\r\n    };\r\n    this.getFunctions = this.getFunctions.bind(this);\r\n    this.changeRenderingState = this.changeRenderingState.bind(this);\r\n  }\r\n\r\n  changeRenderingState(rendering) {\r\n    this.setState({ rendering: rendering });\r\n  }\r\n\r\n  getFunctions(go, reset, setAlgo, algorithms) {\r\n    this.state.goFunction = go;\r\n    this.state.resetFunction = reset;\r\n    this.state.setAlgorithm = setAlgo;\r\n    this.state.algorithms = algorithms;\r\n    this.setState({ algorithms: algorithms });\r\n  }\r\n\r\n  render() {\r\n    let renderObj = null;\r\n    if (this.state.mode === \"pathfinding\") {\r\n      renderObj = (\r\n        <PathFindingVisualizer\r\n          setVisualizerRendering={this.changeRenderingState}\r\n          getFunctions={this.getFunctions}\r\n        />\r\n      );\r\n    } else if (this.state.mode === \"sorting\") {\r\n      renderObj = (\r\n        <SortingVisualizer\r\n          setVisualizerRendering={this.changeRenderingState}\r\n          getFunctions={this.getFunctions}\r\n        />\r\n      );\r\n    }\r\n    // else if (this.state.mode === \"ai\") {\r\n    //   renderObj = (\r\n    //     <AIVisualizer\r\n    //       count={this.state.aicount}\r\n    //       setVisualizerRendering={this.changeRenderingState}\r\n    //       getFunctions={this.getFunctions}\r\n    //     ></AIVisualizer>\r\n    //   );\r\n    // }\r\n    else {\r\n      renderObj = (\r\n        <div class=\"welbotron\">\r\n          <div class=\"container welc\">\r\n            <h1 class=\"welcome\">\r\n              Hello, algorithms.\r\n              <p class=\"quote\">\r\n                <TextLoop\r\n                  interval={3800}\r\n                  springConfig={{ stiffness: 200 }}\r\n                  adjustingSpeed={300}\r\n                >\r\n                  <p class=\"quoteText\">\r\n                    \"An algorithm must be seen to be believed.\"\r\n                  </p>\r\n                  <p class=\"quoteText\">\r\n                    \"Algorithms are central objects of study in Computer\r\n                    Science.\"\r\n                  </p>\r\n                  <p class=\"quoteText\">\r\n                    \"Algorithms are apprehensible magics.\"\r\n                  </p>\r\n                  <p class=\"quoteText\">\"An algorithm is like a recipe.\"</p>\r\n                </TextLoop>\r\n              </p>\r\n              <p class=\"lead\">\r\n                This website might help you understand algorithms better by\r\n                visualizing them.\r\n              </p>\r\n              <p class=\"secondline lead\">\r\n                Click on one of the categories below to visualize algorithms.\r\n              </p>\r\n            </h1>\r\n            <a\r\n              href=\"#\"\r\n              class=\"mainpage-b\"\r\n              onClick={() => {\r\n                if (!this.state.rendering) {\r\n                  this.setState({ mode: \"pathfinding\" });\r\n                  this.setState({ currentAlgorithm: null, pathClicked: true });\r\n                }\r\n              }}\r\n              data-toggle={this.state.pathClicked ? \"\" : \"modal\"}\r\n              data-target=\"#pathIntroModal\"\r\n            >\r\n              <span></span>\r\n              PATH FINDING\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              class=\"mainpage-b\"\r\n              onClick={() => {\r\n                if (!this.state.rendering) {\r\n                  this.setState({\r\n                    mode: \"sorting\",\r\n                    currentAlgorithm: null,\r\n                    sortingClicked: true,\r\n                  });\r\n                }\r\n              }}\r\n              data-toggle={this.state.sortingClicked ? \"\" : \"modal\"}\r\n              data-target=\"#sortingIntroModal\"\r\n            >\r\n              <span></span>\r\n              SORTING\r\n            </a>\r\n            {/* <a\r\n              href=\"#\"\r\n              class=\"mainpage-b\"\r\n              onClick={() => {\r\n                if (!this.state.rendering) {\r\n                  this.setState({\r\n                    mode: \"ai\",\r\n                    currentAlgorithm: null,\r\n                    AIClicked: true,\r\n                  });\r\n                }\r\n              }}\r\n              data-toggle={this.state.AIClicked ? \"\" : \"modal\"}\r\n              data-target=\"#aiIntroModal\"\r\n            >\r\n              <span></span>\r\n              ARTIFICIAL INTELLIGENCE\r\n            </a> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    let invisibleOrNot = \"\";\r\n    if (this.state.mode === \"main\") invisibleOrNot = \" invisible\";\r\n    let algorithms = this.state.algorithms;\r\n    return (\r\n      <>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light fixed-top bg-dark\">\r\n          <button\r\n            onClick={() => {\r\n              if (!this.state.rendering) {\r\n                this.setState({ mode: \"main\" });\r\n              }\r\n            }}\r\n            type=\"button\"\r\n            class=\"btn btn-dark navbtn\"\r\n            disabled={this.state.rendering}\r\n          >\r\n            Main\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              if (!this.state.rendering) {\r\n                this.setState({\r\n                  mode: \"pathfinding\",\r\n                  currentAlgorithm: null,\r\n                  pathClicked: true,\r\n                });\r\n                this.state.setAlgorithm(-1);\r\n              }\r\n            }}\r\n            type=\"button\"\r\n            class=\"btn btn-dark navbtn\"\r\n            data-toggle={this.state.pathClicked ? \"\" : \"modal\"}\r\n            data-target=\"#pathIntroModal\"\r\n            disabled={this.state.rendering}\r\n          >\r\n            Pathfinding\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              if (!this.state.rendering) {\r\n                this.setState({\r\n                  mode: \"sorting\",\r\n                  currentAlgorithm: null,\r\n                  sortingClicked: true,\r\n                });\r\n                this.state.setAlgorithm(-1);\r\n              }\r\n            }}\r\n            type=\"button\"\r\n            class=\"btn btn-dark navbtn\"\r\n            data-toggle={this.state.sortingClicked ? \"\" : \"modal\"}\r\n            data-target=\"#sortingIntroModal\"\r\n            disabled={this.state.rendering}\r\n          >\r\n            Sorting\r\n          </button>\r\n\r\n          {/* <button\r\n                        onClick={() => {\r\n\r\n                            if (!this.state.rendering) {\r\n                                this.setState({ mode: 'ai', currentAlgorithm: null, AIClicked: true });\r\n                                this.state.setAlgorithm(-1);\r\n                            }\r\n                        }}\r\n                        type=\"button\" class=\"btn btn-dark navbtn\"\r\n                        data-toggle={this.state.AIClicked ? \"\" : \"modal\"} data-target=\"#aiIntroModal\"\r\n                        disabled={this.state.rendering}\r\n                    >AI</button> */}\r\n\r\n          <div class={\"dropdown\" + invisibleOrNot}>\r\n            <button\r\n              class=\"btn btn-secondary dropdown-toggle navbtn\"\r\n              type=\"button\"\r\n              id=\"dropdownMenuButton\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n              disabled={this.state.rendering}\r\n            >\r\n              {this.state.currentAlgorithm == null\r\n                ? \"Algorithms\"\r\n                : this.state.currentAlgorithm}\r\n            </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <li>\r\n                {algorithms.map((algorithm, algoId) => {\r\n                  return (\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-light navbtn\"\r\n                      onClick={() => {\r\n                        this.state.setAlgorithm(algoId);\r\n                        this.setState({\r\n                          currentAlgorithm: this.state.algorithms[algoId],\r\n                        });\r\n                      }}\r\n                    >\r\n                      {algorithm}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </li>\r\n            </div>\r\n          </div>\r\n\r\n          <div class={\"dropdown\" + invisibleOrNot}>\r\n            <button\r\n              class=\"btn btn-light dropdown-toggle navbtn\"\r\n              type=\"button\"\r\n              id=\"dropdownMenuButton\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n              disabled={this.state.rendering}\r\n            >\r\n              Actions\r\n            </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-light navbtn\"\r\n                  onClick={() => this.state.goFunction()}\r\n                  data-toggle={\r\n                    this.state.currentAlgorithm === null ? \"modal\" : \"\"\r\n                  }\r\n                  data-target=\"#setAlgoModal\"\r\n                  disabled={\r\n                    this.state.mode === \"ai\" &&\r\n                    this.state.currentAlgorithm === \"Minimax\"\r\n                  }\r\n                >\r\n                  Go!\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-light navbtn\"\r\n                  onClick={() => this.state.resetFunction()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </li>\r\n            </div>\r\n          </div>\r\n\r\n          <a\r\n            href=\"https://github.com/patellalit1507\"\r\n            style={{ marginLeft: \"32%\" }}\r\n          >\r\n            <img\r\n              class=\"githubimg\"\r\n              src=\"https://github.com/JasonFengGit/Visualizer/raw/master/src/Github_icon.png\"\r\n              width=\"40px\"\r\n              height=\"40px\"\r\n              style={{ opacity: \"0.7 !important\" }}\r\n              alt\r\n            ></img>\r\n          </a>\r\n        </nav>\r\n\r\n        <div class=\"modal fade\" id=\"setAlgoModal\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">No Algorithm Selected</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n                  &times;\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"modal-body-alert\">\r\n                <p>Please select an algorithm first.</p>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-dark\"\r\n                  data-dismiss=\"modal\"\r\n                  style={{ width: \"100px\" }}\r\n                >\r\n                  OK\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"pathIntroModal\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content intro\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Pathfinding</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n                  &times;\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"modal-body intro\">\r\n                <p>\r\n                  Pathfinding is generally the process of finding a route\r\n                  between two points. It is closely related to the shortest path\r\n                  problem in graph theory, which examines how to identify the\r\n                  \"best\" paths valued by different criteria (Ex. distance, cost,\r\n                  time consumption).\r\n                </p>\r\n                <p>\r\n                  Pathfinding is also similar to Searching in some\r\n                  circumstances. For instance, we can use [breadth-first search]\r\n                  to find the shortest path in a grid world.\r\n                </p>\r\n                <p>\r\n                  In our scenario, the paths are valued by the number of cells\r\n                  they passed from START:\r\n                  <div class=\"simg\" width=\"20\" height=\"20\"></div>\r\n                  to the TARGET:\r\n                  <div class=\"fimg\" width=\"20\" height=\"20\"></div>.\r\n                </p>\r\n                <p>\r\n                  You may drag the START and TARGET icons to change their\r\n                  positions, and click on the blank nodes to add Walls.\r\n                </p>\r\n\r\n                <p>Now please choose a sorting algorithm and visualize it!</p>\r\n                <p class=\"tips\">\r\n                  (after choosing an algorithm, click on the [Actions] button.)\r\n                </p>\r\n                <br />\r\n                <p class=\"tips\">\r\n                  Note: there could be multiple \"best\" paths, so paths generated\r\n                  by different algorithms may not be consistent.\r\n                </p>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-dark\"\r\n                  data-dismiss=\"modal\"\r\n                  style={{ width: \"100px\" }}\r\n                >\r\n                  OK\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"sortingIntroModal\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content intro\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Sorting</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n                  &times;\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"modal-body intro\">\r\n                <p>\r\n                  Sorting is a process of arranging an ordered sequence. It is a\r\n                  common operation in many applications.\r\n                </p>\r\n                <p>\r\n                  Common uses of sorted sequences are:\r\n                  <div class=\"uses-list\">\r\n                    <p>·lookup or search efficiently</p>\r\n                    <p>·merge sequences efficiently</p>\r\n                    <p>·process data in a defined order</p>\r\n                  </div>\r\n                  Now please choose a sorting algorithm and visualize it!\r\n                </p>\r\n                <p class=\"tips\">\r\n                  (after choosing an algorithm, click on the [Actions] button.)\r\n                </p>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-dark\"\r\n                  data-dismiss=\"modal\"\r\n                  style={{ width: \"100px\" }}\r\n                >\r\n                  OK\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div class=\"modal fade\" id=\"aiIntroModal\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content intro\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Artificial Intelligence</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n                  &times;\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"modal-body intro\">\r\n                <p>\r\n                  Artificial intelligence (AI) is intelligence demonstrated by\r\n                  machines. Leading textbooks define the field as the study of\r\n                  \"intelligent agents\": any device that perceives its\r\n                  environment and takes actions that maximize its chance of\r\n                  successfully achieving its goals.\r\n                </p>\r\n                <p>\r\n                  In this category, you will experience with powerful AI\r\n                  algorithms based on fundamental ideas. Please try to\r\n                  understand those ideas behind through the visualizations, and\r\n                  I would try my best to demonstrate those principles.\r\n                </p>\r\n                <p> Now please choose an algorithm and begin your journey!</p>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-dark\"\r\n                  data-dismiss=\"modal\"\r\n                  style={{ width: \"100px\" }}\r\n                >\r\n                  OK\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        {/* </div> */}\r\n\r\n        <div>{renderObj}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Visualizer from \"./Visualizer\";\r\nimport \"bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <meta charset=\"utf-8\" />\r\n      <meta\r\n        name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\r\n      />\r\n\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\r\n        integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\"\r\n        crossorigin=\"anonymous\"\r\n      ></link>\r\n      <div className=\"App\">\r\n        <BrowserRouter basename={\"engGit.github.iJasonFo/\"}>\r\n          <Visualizer></Visualizer>\r\n        </BrowserRouter>\r\n      </div>\r\n      <script\r\n        src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\r\n        integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\r\n        crossorigin=\"anonymous\"\r\n      ></script>\r\n      <script\r\n        src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"\r\n        integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\"\r\n        crossorigin=\"anonymous\"\r\n      ></script>\r\n      <script\r\n        src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"\r\n        integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\"\r\n        crossorigin=\"anonymous\"\r\n      ></script>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App class='app'></App>, document.getElementById('root'));\r\nserviceWorker.unregister();"],"sourceRoot":""}